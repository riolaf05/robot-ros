name: Create Release on Master

on:
  push:
    branches:
      - master
      - main

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y.%m.%d')" >> $GITHUB_OUTPUT

      - name: Get current timestamp
        id: timestamp
        run: echo "timestamp=$(date +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_OUTPUT

      - name: Check if tag exists
        id: tag_check
        run: |
          TAG_NAME="v${{ steps.date.outputs.date }}"
          if git tag -l | grep -q "^${TAG_NAME}$"; then
            # Se il tag esiste giÃ , aggiungi un suffisso incrementale
            COUNTER=1
            while git tag -l | grep -q "^${TAG_NAME}.${COUNTER}$"; do
              COUNTER=$((COUNTER + 1))
            done
            TAG_NAME="${TAG_NAME}.${COUNTER}"
          fi
          echo "tag_name=${TAG_NAME}" >> $GITHUB_OUTPUT

      - name: Create tag
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git tag -a ${{ steps.tag_check.outputs.tag_name }} -m "Release ${{ steps.tag_check.outputs.tag_name }} - ${{ steps.timestamp.outputs.timestamp }}"
          git push origin ${{ steps.tag_check.outputs.tag_name }}

      - name: Generate changelog
        id: changelog
        run: |
          # Ottieni l'ultimo tag precedente
          PREVIOUS_TAG=$(git tag --sort=-version:refname | head -n 2 | tail -n 1)
          if [ -z "$PREVIOUS_TAG" ]; then
            # Se non ci sono tag precedenti, usa il primo commit
            PREVIOUS_TAG=$(git rev-list --max-parents=0 HEAD)
          fi
          
          # Genera il changelog
          echo "## Changes since $PREVIOUS_TAG" > changelog.md
          echo "" >> changelog.md
          git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..HEAD >> changelog.md
          echo "" >> changelog.md
          echo "**Release Date:** ${{ steps.timestamp.outputs.timestamp }}" >> changelog.md
          echo "**Commit:** $(git rev-parse HEAD)" >> changelog.md

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_check.outputs.tag_name }}
          release_name: "Robot-ROS Release ${{ steps.tag_check.outputs.tag_name }}"
          body_path: changelog.md
          draft: false
          prerelease: false

      - name: Update package.xml version (if exists)
        run: |
          if [ -f "package.xml" ]; then
            sed -i "s/<version>.*<\/version>/<version>${{ steps.tag_check.outputs.tag_name }}<\/version>/" package.xml
            git add package.xml
            git commit -m "Update version to ${{ steps.tag_check.outputs.tag_name }}" || echo "No changes to commit"
            git push origin master || git push origin main || echo "Could not push version update"
          fi

      - name: Create artifact with release info
        run: |
          mkdir -p release-info
          echo "Release: ${{ steps.tag_check.outputs.tag_name }}" > release-info/release.txt
          echo "Date: ${{ steps.timestamp.outputs.timestamp }}" >> release-info/release.txt
          echo "Commit: $(git rev-parse HEAD)" >> release-info/release.txt

      - name: Upload release artifact
        uses: actions/upload-artifact@v3
        with:
          name: release-info-${{ steps.tag_check.outputs.tag_name }}
          path: release-info/